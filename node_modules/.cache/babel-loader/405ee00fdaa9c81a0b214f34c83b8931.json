{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\eon-react-test\\\\src\\\\TaskOne.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; //  const datas =[ 'A', 'B', 'C'];\n\nfunction shuffle(arra1) {\n  var ctr = arra1.length,\n      temp,\n      index;\n\n  while (ctr > 0) {\n    index = Math.floor(Math.random() * ctr);\n    ctr--;\n    temp = arra1[ctr];\n    arra1[ctr] = arra1[index];\n    arra1[index] = temp;\n  }\n\n  return arra1;\n}\n\nfunction ArrList({\n  datas\n}) {\n  _s();\n\n  const [list, setList] = useState(datas);\n  useEffect(() => {\n    const mountArray = shuffle(datas);\n    setList(mountArray);\n  }, []);\n\n  function handleShuffle() {\n    const changes = shuffle([...list]);\n    setList(changes);\n    console.log(\"Shuffle\", datas);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: list.map((x, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: handleShuffle,\n        children: [\" \", i + 1, \" \", x, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ArrList, \"E5Ag6N51+aQvICEmacA6el56GbI=\");\n\n_c = ArrList;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ArrList, {\n      datas: [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ArrList\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/xampp/htdocs/eon-react-test/src/TaskOne.js"],"names":["React","useEffect","useState","shuffle","arra1","ctr","length","temp","index","Math","floor","random","ArrList","datas","list","setList","mountArray","handleShuffle","changes","console","log","map","x","i","App"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CAEA;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,MAAIC,GAAG,GAAGD,KAAK,CAACE,MAAhB;AAAA,MACEC,IADF;AAAA,MAEEC,KAFF;;AAGA,SAAOH,GAAG,GAAG,CAAb,EAAgB;AACdG,IAAAA,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,GAA3B,CAAR;AACAA,IAAAA,GAAG;AACHE,IAAAA,IAAI,GAAGH,KAAK,CAACC,GAAD,CAAZ;AACAD,IAAAA,KAAK,CAACC,GAAD,CAAL,GAAaD,KAAK,CAACI,KAAD,CAAlB;AACAJ,IAAAA,KAAK,CAACI,KAAD,CAAL,GAAeD,IAAf;AACD;;AACD,SAAOH,KAAP;AACD;;AAED,SAASQ,OAAT,CAAiB;AAACC,EAAAA;AAAD,CAAjB,EAA0B;AAAA;;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAACW,KAAD,CAAhC;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,UAAU,GAAGb,OAAO,CAACU,KAAD,CAA1B;AACAE,IAAAA,OAAO,CAACC,UAAD,CAAP;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,WAASC,aAAT,GAAyB;AACvB,UAAMC,OAAO,GAAGf,OAAO,CAAC,CAAC,GAAGW,IAAJ,CAAD,CAAvB;AACAC,IAAAA,OAAO,CAACG,OAAD,CAAP;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBP,KAAvB;AACD;;AACD,sBACE;AAAA,cACGC,IAAI,CAACO,GAAL,CAAS,CAACC,CAAD,EAAIC,CAAJ,kBACR;AAAA,6BACE;AAAG,QAAA,OAAO,EAAEN,aAAZ;AAAA,wBAA6BM,CAAC,GAAC,CAA/B,OAAmCD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,OAAUC,CAAV;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GArBQX,O;;KAAAA,O;;AAuBT,SAASY,GAAT,GAAe;AACX,sBACI;AAAA,2BACE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;MANQA,G;AAQT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\n//  const datas =[ 'A', 'B', 'C'];\r\n\r\nfunction shuffle(arra1) {\r\n  var ctr = arra1.length,\r\n    temp,\r\n    index;\r\n  while (ctr > 0) {\r\n    index = Math.floor(Math.random() * ctr);\r\n    ctr--;\r\n    temp = arra1[ctr];\r\n    arra1[ctr] = arra1[index];\r\n    arra1[index] = temp;\r\n  }\r\n  return arra1;\r\n}\r\n\r\nfunction ArrList({datas}) {\r\n  const [list, setList] = useState(datas);\r\n  useEffect(() => {\r\n    const mountArray = shuffle(datas);\r\n    setList(mountArray);\r\n  }, []);\r\n\r\n  function handleShuffle() {\r\n    const changes = shuffle([...list]);\r\n    setList(changes);\r\n    console.log(\"Shuffle\", datas);\r\n  }\r\n  return (\r\n    <div>\r\n      {list.map((x, i) => (\r\n        <div key={i}>\r\n          <p onClick={handleShuffle}> {i+1} {x} </p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction App (){\r\n    return (\r\n        <div>\r\n          <ArrList datas={[\"A\", \"B\", \"C\", \"D\", \"E\"]} />\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}