{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\nexport default function set(entity, paths, value) {\n  if (!paths.length) {\n    return value;\n  }\n\n  var _paths = _toArray(paths),\n      path = _paths[0],\n      restPath = _paths.slice(1);\n\n  var clone;\n\n  if (!entity && typeof path === 'number') {\n    clone = [];\n  } else if (Array.isArray(entity)) {\n    clone = _toConsumableArray(entity);\n  } else {\n    clone = _objectSpread({}, entity);\n  }\n\n  clone[path] = set(clone[path], restPath, value);\n  return clone;\n}","map":{"version":3,"sources":["C:/xampp/htdocs/react-test/node_modules/rc-util/es/utils/set.js"],"names":["_objectSpread","_toConsumableArray","_toArray","set","entity","paths","value","length","_paths","path","restPath","slice","clone","Array","isArray"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,0CAA1B;AACA,OAAOC,kBAAP,MAA+B,8CAA/B;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,eAAe,SAASC,GAAT,CAAaC,MAAb,EAAqBC,KAArB,EAA4BC,KAA5B,EAAmC;AAChD,MAAI,CAACD,KAAK,CAACE,MAAX,EAAmB;AACjB,WAAOD,KAAP;AACD;;AAED,MAAIE,MAAM,GAAGN,QAAQ,CAACG,KAAD,CAArB;AAAA,MACII,IAAI,GAAGD,MAAM,CAAC,CAAD,CADjB;AAAA,MAEIE,QAAQ,GAAGF,MAAM,CAACG,KAAP,CAAa,CAAb,CAFf;;AAIA,MAAIC,KAAJ;;AAEA,MAAI,CAACR,MAAD,IAAW,OAAOK,IAAP,KAAgB,QAA/B,EAAyC;AACvCG,IAAAA,KAAK,GAAG,EAAR;AACD,GAFD,MAEO,IAAIC,KAAK,CAACC,OAAN,CAAcV,MAAd,CAAJ,EAA2B;AAChCQ,IAAAA,KAAK,GAAGX,kBAAkB,CAACG,MAAD,CAA1B;AACD,GAFM,MAEA;AACLQ,IAAAA,KAAK,GAAGZ,aAAa,CAAC,EAAD,EAAKI,MAAL,CAArB;AACD;;AAEDQ,EAAAA,KAAK,CAACH,IAAD,CAAL,GAAcN,GAAG,CAACS,KAAK,CAACH,IAAD,CAAN,EAAcC,QAAd,EAAwBJ,KAAxB,CAAjB;AACA,SAAOM,KAAP;AACD","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\nexport default function set(entity, paths, value) {\n  if (!paths.length) {\n    return value;\n  }\n\n  var _paths = _toArray(paths),\n      path = _paths[0],\n      restPath = _paths.slice(1);\n\n  var clone;\n\n  if (!entity && typeof path === 'number') {\n    clone = [];\n  } else if (Array.isArray(entity)) {\n    clone = _toConsumableArray(entity);\n  } else {\n    clone = _objectSpread({}, entity);\n  }\n\n  clone[path] = set(clone[path], restPath, value);\n  return clone;\n}"]},"metadata":{},"sourceType":"module"}