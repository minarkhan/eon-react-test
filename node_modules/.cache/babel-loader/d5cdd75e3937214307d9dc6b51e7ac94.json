{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\eon-react-test\\\\src\\\\TestTwo.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TreeView from '@material-ui/lab/TreeView';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport TreeItem from '@material-ui/lab/TreeItem';\nconst data = {\n  id: 'root',\n  name: 'Parent',\n  children: [{\n    id: '1',\n    name: 'Child - 1'\n  }, {\n    id: '3',\n    name: 'Child - 3',\n    children: [{\n      id: '4',\n      name: 'Child - 4'\n    }]\n  }]\n};\nconst useStyles = makeStyles({\n  root: {\n    height: 110,\n    flexGrow: 1,\n    maxWidth: 400\n  }\n});\nexport default function RecursiveTreeView() {\n  _s();\n\n  const classes = useStyles();\n\n  const renderTree = nodes => /*#__PURE__*/_jsxDEV(TreeItem, {\n    nodeId: nodes.id,\n    label: nodes.name,\n    children: Array.isArray(nodes.children) ? nodes.children.map(node => renderTree(node)) : null\n  }, nodes.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(TreeView, {\n    className: classes.root,\n    defaultCollapseIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 28\n    }, this),\n    defaultExpanded: ['root'],\n    defaultExpandIcon: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 26\n    }, this),\n    children: renderTree(data)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RecursiveTreeView, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = RecursiveTreeView;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecursiveTreeView\");","map":{"version":3,"sources":["C:/xampp/htdocs/eon-react-test/src/TestTwo.js"],"names":["React","makeStyles","TreeView","ExpandMoreIcon","ChevronRightIcon","TreeItem","data","id","name","children","useStyles","root","height","flexGrow","maxWidth","RecursiveTreeView","classes","renderTree","nodes","Array","isArray","map","node"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,QAAP,MAAqB,2BAArB;AAEA,MAAMC,IAAI,GAAG;AACXC,EAAAA,EAAE,EAAE,MADO;AAEXC,EAAAA,IAAI,EAAE,QAFK;AAGXC,EAAAA,QAAQ,EAAE,CACR;AACEF,IAAAA,EAAE,EAAE,GADN;AAEEC,IAAAA,IAAI,EAAE;AAFR,GADQ,EAKR;AACED,IAAAA,EAAE,EAAE,GADN;AAEEC,IAAAA,IAAI,EAAE,WAFR;AAGEC,IAAAA,QAAQ,EAAE,CACR;AACEF,MAAAA,EAAE,EAAE,GADN;AAEEC,MAAAA,IAAI,EAAE;AAFR,KADQ;AAHZ,GALQ;AAHC,CAAb;AAqBA,MAAME,SAAS,GAAGT,UAAU,CAAC;AAC3BU,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE,GADJ;AAEJC,IAAAA,QAAQ,EAAE,CAFN;AAGJC,IAAAA,QAAQ,EAAE;AAHN;AADqB,CAAD,CAA5B;AAQA,eAAe,SAASC,iBAAT,GAA6B;AAAA;;AAC1C,QAAMC,OAAO,GAAGN,SAAS,EAAzB;;AAEA,QAAMO,UAAU,GAAIC,KAAD,iBACjB,QAAC,QAAD;AAAyB,IAAA,MAAM,EAAEA,KAAK,CAACX,EAAvC;AAA2C,IAAA,KAAK,EAAEW,KAAK,CAACV,IAAxD;AAAA,cACGW,KAAK,CAACC,OAAN,CAAcF,KAAK,CAACT,QAApB,IAAgCS,KAAK,CAACT,QAAN,CAAeY,GAAf,CAAoBC,IAAD,IAAUL,UAAU,CAACK,IAAD,CAAvC,CAAhC,GAAiF;AADpF,KAAeJ,KAAK,CAACX,EAArB;AAAA;AAAA;AAAA;AAAA,UADF;;AAMA,sBACE,QAAC,QAAD;AACE,IAAA,SAAS,EAAES,OAAO,CAACL,IADrB;AAEE,IAAA,mBAAmB,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAFvB;AAGE,IAAA,eAAe,EAAE,CAAC,MAAD,CAHnB;AAIE,IAAA,iBAAiB,eAAE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YAJrB;AAAA,cAMGM,UAAU,CAACX,IAAD;AANb;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAnBuBS,iB;UACNL,S;;;KADMK,iB","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TreeView from '@material-ui/lab/TreeView';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport TreeItem from '@material-ui/lab/TreeItem';\n\nconst data = {\n  id: 'root',\n  name: 'Parent',\n  children: [\n    {\n      id: '1',\n      name: 'Child - 1',\n    },\n    {\n      id: '3',\n      name: 'Child - 3',\n      children: [\n        {\n          id: '4',\n          name: 'Child - 4',\n        },\n      ],\n    },\n  ],\n};\n\nconst useStyles = makeStyles({\n  root: {\n    height: 110,\n    flexGrow: 1,\n    maxWidth: 400,\n  },\n});\n\nexport default function RecursiveTreeView() {\n  const classes = useStyles();\n\n  const renderTree = (nodes) => (\n    <TreeItem key={nodes.id} nodeId={nodes.id} label={nodes.name}>\n      {Array.isArray(nodes.children) ? nodes.children.map((node) => renderTree(node)) : null}\n    </TreeItem>\n  );\n\n  return (\n    <TreeView\n      className={classes.root}\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpanded={['root']}\n      defaultExpandIcon={<ChevronRightIcon />}\n    >\n      {renderTree(data)}\n    </TreeView>\n  );\n}"]},"metadata":{},"sourceType":"module"}